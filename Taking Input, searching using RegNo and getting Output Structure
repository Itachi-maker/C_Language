//Taking Input, searching using RegNo and getting Output Structure
#include <stdio.h>
struct Student {
    char Name[50];
    int RegNo;
    float mark;
};

void inputDetails(struct Student s[], int n) {
    for (int i = 0; i < n; i++) {
        printf("\nEnter name %d: ", i + 1);
        scanf("%s", s[i].Name);
        printf("Enter RegNo %d: ", i + 1);
        scanf("%d", &s[i].RegNo);
        printf("Enter mark %d: ", i + 1);
        scanf("%f", &s[i].mark);
    }
}
void outputDetails(struct Student s[], int n) {
    for (int i = 0; i < n; i++) {
        printf("\nDetails of student %d:\n", i + 1);
        printf("Name: %s\n", s[i].Name);
        printf("RegNo: %d\n", s[i].RegNo);
        printf("Mark: %.1f\n", s[i].mark);
    }
}
void searchRegNo(struct Student s[], int n) {
    int h, found = 0;
    printf("Enter the RegNo to be searched: ");
    scanf("%d", &h);
    for (int i = 0; i < n; i++) {
        if (s[i].RegNo == h) {
            printf("\nDetails of searched student:\n");
            printf("Name: %s\n", s[i].Name);
            printf("RegNo: %d\n", s[i].RegNo);
            printf("Mark: %.1f\n", s[i].mark);
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Error: Student with RegNo %d not found.\n", h);
    }
}
int main() {
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    struct Student s[n];
    
    inputDetails(s, n);
    outputDetails(s, n);
    searchRegNo(s, n);

    return 0;
}
